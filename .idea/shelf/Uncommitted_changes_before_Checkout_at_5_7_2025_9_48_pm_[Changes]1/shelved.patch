Index: password.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>Email: dini@gmail.com\r\nPassword: Farzana\r\n------------------------\r\nEmail: rana@gmail.com\r\nPassword: dada\r\n------------------------\r\nEmail: ss@gmail.com\r\nPassword: GG\r\n------------------------\r\nEmail: dini@gmail.com\r\nPassword: dddd\r\n------------------------\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/password.txt b/password.txt
--- a/password.txt	(revision 92abc7475221d2877613daa782a93470e25ba658)
+++ b/password.txt	(date 1751722342340)
@@ -10,3 +10,9 @@
 Email: dini@gmail.com
 Password: dddd
 ------------------------
+Email: dr@gmail.com
+Password: ddd
+------------------------
+Email: s@gmail.com
+Password: sss
+------------------------
Index: src/Checkout.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import javax.swing.*;\r\nimport java.awt.event.*;\r\n\r\npublic class Checkout extends JFrame implements ActionListener {\r\n    private JPanel pnlCheckout;\r\n    private JRadioButton rbWeekday;\r\n    private JRadioButton rbWeekend;\r\n    private JSpinner spKid;\r\n    private JSpinner spAdult;\r\n    private JSpinner spOKU;\r\n    private JSpinner spAnimalFood;\r\n    private JSpinner spBirdShow;\r\n    private JRadioButton rbSafariYes;\r\n    private JRadioButton rbSafariNo;\r\n    private JRadioButton rbPhotoboothYes;\r\n    private JRadioButton rbPhotoboothNo;\r\n    private JButton btnCheckout;\r\n    private JLabel lblKid;\r\n    private JLabel lblAdult;\r\n    private JLabel lblOKU;\r\n    private JLabel lblSafariRide;\r\n    private JLabel lblPhotobooth;\r\n    private JLabel lblAnimalFood;\r\n    private JLabel lblBirdShow;\r\n\r\n    private ButtonGroup bgWeek, bgSafariRide, bgPhotobooth;\r\n\r\n    public Checkout() {\r\n        setTitle(\"Zoo Ticket System\");\r\n        setSize(700, 500);\r\n        setContentPane(pnlCheckout);\r\n        setDefaultCloseOperation(EXIT_ON_CLOSE);\r\n        setVisible(true);\r\n\r\n        // Group radio buttons\r\n        bgWeek = new ButtonGroup();\r\n        bgWeek.add(rbWeekday);\r\n        bgWeek.add(rbWeekend);\r\n\r\n        bgSafariRide = new ButtonGroup();\r\n        bgSafariRide.add(rbSafariYes);\r\n        bgSafariRide.add(rbSafariNo);\r\n\r\n        bgPhotobooth = new ButtonGroup();\r\n        bgPhotobooth.add(rbPhotoboothYes);\r\n        bgPhotobooth.add(rbPhotoboothNo);\r\n\r\n        // Spinner model\r\n        spKid.setModel(new SpinnerNumberModel(0, 0, 1000, 1));\r\n        spAdult.setModel(new SpinnerNumberModel(1, 1, 1000, 1));\r\n        spOKU.setModel(new SpinnerNumberModel(0, 0, 1000, 1));\r\n        spAnimalFood.setModel(new SpinnerNumberModel(0, 0, 1000, 1));\r\n        spBirdShow.setModel(new SpinnerNumberModel(0, 0, 1000, 1));\r\n\r\n        // Button Action\r\n        btnCheckout.addActionListener(this);\r\n    }\r\n\r\n    @Override\r\n    public void actionPerformed(ActionEvent e) {\r\n        int noKid = (Integer) spKid.getValue();\r\n        int noAdult = (Integer) spAdult.getValue();\r\n        int noOKU = (Integer) spOKU.getValue();\r\n        int noAnimalFood = (Integer) spAnimalFood.getValue();\r\n        int noBirdShow = (Integer) spBirdShow.getValue();\r\n\r\n        boolean safari = rbSafariYes.isSelected();\r\n        boolean photobooth = rbPhotoboothYes.isSelected();\r\n\r\n        String ticketType;\r\n        int kidPrice, adultPrice, okuPrice;\r\n\r\n        if (rbWeekday.isSelected()) {\r\n            ticketType = \"Weekday\";\r\n            kidPrice = 10;\r\n            adultPrice = 12;\r\n            okuPrice = 7;\r\n        } else if (rbWeekend.isSelected()) {\r\n            ticketType = \"Weekend\";\r\n            kidPrice = 13;\r\n            adultPrice = 15;\r\n            okuPrice = 9;\r\n        } else {\r\n            JOptionPane.showMessageDialog(this, \"Please select day (Weekday/Weekend).\");\r\n            return;\r\n        }\r\n\r\n        // Validasi opsyen Safari dan Photobooth\r\n        if (!rbSafariYes.isSelected() && !rbSafariNo.isSelected()) {\r\n            JOptionPane.showMessageDialog(this, \"Please select Safari Ride option.\");\r\n            return;\r\n        }\r\n        if (!rbPhotoboothYes.isSelected() && !rbPhotoboothNo.isSelected()) {\r\n            JOptionPane.showMessageDialog(this, \"Please select Photobooth option.\");\r\n            return;\r\n        }\r\n\r\n        int safariPrice = safari ? 30 : 0;\r\n        int photoPrice = photobooth ? 30 : 0;\r\n        int animalFoodPrice = 10;\r\n        int birdShowPrice = 15;\r\n\r\n        int total = (noKid * kidPrice) + (noAdult * adultPrice) + (noOKU * okuPrice)\r\n                + safariPrice + photoPrice + (noAnimalFood * animalFoodPrice) + (noBirdShow * birdShowPrice);\r\n\r\n        // Papar resit guna ReceiveData (pass semua data)\r\n        new ReceiveData(ticketType, noKid, kidPrice, noAdult, adultPrice, noOKU, okuPrice,\r\n                safari, photobooth, noAnimalFood, animalFoodPrice, noBirdShow, birdShowPrice, total);\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        new Checkout();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Checkout.java b/src/Checkout.java
--- a/src/Checkout.java	(revision 92abc7475221d2877613daa782a93470e25ba658)
+++ b/src/Checkout.java	(date 1751723271154)
@@ -82,17 +82,17 @@
             okuPrice = 9;
         } else {
             JOptionPane.showMessageDialog(this, "Please select day (Weekday/Weekend).");
-            return;
+            return safari;
         }
 
         // Validasi opsyen Safari dan Photobooth
         if (!rbSafariYes.isSelected() && !rbSafariNo.isSelected()) {
             JOptionPane.showMessageDialog(this, "Please select Safari Ride option.");
-            return;
+            return safari;
         }
         if (!rbPhotoboothYes.isSelected() && !rbPhotoboothNo.isSelected()) {
             JOptionPane.showMessageDialog(this, "Please select Photobooth option.");
-            return;
+            return safari;
         }
 
         int safariPrice = safari ? 30 : 0;
@@ -106,6 +106,7 @@
         // Papar resit guna ReceiveData (pass semua data)
         new ReceiveData(ticketType, noKid, kidPrice, noAdult, adultPrice, noOKU, okuPrice,
                 safari, photobooth, noAnimalFood, animalFoodPrice, noBirdShow, birdShowPrice, total);
+        return safari;
     }
 
     public static void main(String[] args) {
Index: src/Zoo/LogInWindow.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Zoo;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\n\r\npublic abstract class LogInWindow extends JFrame implements ActionListener {\r\n    protected JPanel panel1;\r\n    protected JFormattedTextField fEmail;\r\n    protected JPasswordField jPassword;\r\n    protected JCheckBox jcbRememberMe;\r\n    protected JButton btnSubmit;\r\n    protected JLabel lblLogIn;\r\n    protected JLabel lblPassword;\r\n    protected JLabel lblForgotPass;\r\n\r\n    public LogInWindow(){\r\n        super.setTitle(\"Zoo Booking\"); // title\r\n        super.setSize(400,300);\r\n\r\n        //action listener\r\n        fEmail.addActionListener(this);\r\n        //add designed to Content Pane\r\n        Container cp = super.getContentPane();\r\n        cp.add(panel1);\r\n\r\n\r\n        super.setVisible(true);\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        new LogInWindow() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n\r\n\r\n            }\r\n        };\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Zoo/LogInWindow.java b/src/Zoo/LogInWindow.java
--- a/src/Zoo/LogInWindow.java	(revision 92abc7475221d2877613daa782a93470e25ba658)
+++ b/src/Zoo/LogInWindow.java	(date 1751723329815)
@@ -4,6 +4,8 @@
 import java.awt.*;
 import java.awt.event.ActionEvent;
 import java.awt.event.ActionListener;
+import java.io.*;
+import java.util.Scanner;
 
 public abstract class LogInWindow extends JFrame implements ActionListener {
     protected JPanel panel1;
@@ -20,11 +22,21 @@
         super.setSize(400,300);
 
         //action listener
-        fEmail.addActionListener(this);
+        btnSubmit.addActionListener(this);
+        jcbRememberMe.addActionListener(this);
         //add designed to Content Pane
         Container cp = super.getContentPane();
         cp.add(panel1);
 
+        try{
+            Scanner sc = new Scanner(new File("password.txt"));
+                    while(sc.hasNextLine()){
+
+                    }
+        } catch (FileNotFoundException e) {
+            throw new RuntimeException(e);
+        }
+
 
         super.setVisible(true);
     }
@@ -33,8 +45,29 @@
         new LogInWindow() {
             @Override
             public void actionPerformed(ActionEvent e) {
+                if(e.getSource()==btnSubmit){
+
+                if(e.getSource()==jcbRememberMe){
+                    try {
+                        FileWriter fw = new FileWriter("remember.txt", true); // true = append
+                        BufferedWriter bw = new BufferedWriter(fw);
+                        bw.write("Email: " + fEmail.getText());
+                        bw.newLine();
+                        bw.write("Password: " + String.valueOf(jPassword.getPassword()));
+                        bw.newLine();
+                        bw.write("------------------------");
+                        bw.newLine();
+                        bw.close();
+                    } catch (IOException ex) {
+                        JOptionPane.showMessageDialog(this, "Error saving to file: " + ex.getMessage());
+                    }
 
+                    }
 
+                }
+
+
+                return false;
             }
         };
     }
Index: src/Zoo/WelcomePage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Zoo;\r\n\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.*;\r\n\r\npublic abstract class WelcomePage extends JFrame implements ActionListener,MouseListener {\r\n    public JPanel pnlMain;\r\n    public JButton btnSignUp;\r\n    public JLabel lblTitle;\r\n    public JLabel lblaccount;\r\n    public JLabel lblLogIn;\r\n\r\n    public WelcomePage() {\r\n\r\n        super.setTitle(\"Zoo Booking\"); // title\r\n        super.setSize(400,300);\r\n        super.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n\r\n        //action Listener\r\n        btnSignUp.addActionListener(this);\r\n        lblLogIn.addMouseListener((MouseListener) this);\r\n\r\n        //add designed to Content Pane\r\n        Container cp = super.getContentPane();\r\n        cp.add(pnlMain);\r\n\r\n        ImageIcon image = new ImageIcon(\"Zoo.jfif\");\r\n        super.setIconImage(image.getImage());\r\n\r\n\r\n\r\n\r\n        super.setVisible(true);\r\n\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n\r\n        new WelcomePage() {\r\n            @Override\r\n            public void mouseClicked(MouseEvent e) {\r\n                if(e.getSource()==lblLogIn){\r\n                    LogInWindow login = new LogInWindow() {\r\n                        @Override\r\n                        public void actionPerformed(ActionEvent e) {\r\n\r\n                        }\r\n                    };\r\n                    dispose();\r\n                }\r\n\r\n            }\r\n\r\n            @Override\r\n            public void mousePressed(MouseEvent e) {}\r\n\r\n            @Override\r\n            public void mouseReleased(MouseEvent e) {}\r\n\r\n            @Override\r\n            public void mouseEntered(MouseEvent e) {}\r\n\r\n            @Override\r\n            public void mouseExited(MouseEvent e) {}\r\n\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                if(e.getSource()==btnSignUp){\r\n                    new SignUpWindow() {\r\n                        @Override\r\n                        public void focusGained(FocusEvent e) {\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void focusLost(FocusEvent e) {\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void mouseClicked(MouseEvent e) {\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void mousePressed(MouseEvent e) {\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void mouseReleased(MouseEvent e) {\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void mouseEntered(MouseEvent e) {\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void mouseExited(MouseEvent e) {\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void actionPerformed(ActionEvent e) {\r\n\r\n                        }\r\n                    };\r\n                    dispose();\r\n                }\r\n\r\n            }\r\n        };\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Zoo/WelcomePage.java b/src/Zoo/WelcomePage.java
--- a/src/Zoo/WelcomePage.java	(revision 92abc7475221d2877613daa782a93470e25ba658)
+++ b/src/Zoo/WelcomePage.java	(date 1751723271137)
@@ -4,6 +4,8 @@
 import javax.swing.*;
 import java.awt.*;
 import java.awt.event.*;
+import java.awt.event.ActionListener;
+import java.awt.event.MouseListener;
 
 public abstract class WelcomePage extends JFrame implements ActionListener,MouseListener {
     public JPanel pnlMain;
@@ -46,6 +48,7 @@
                         @Override
                         public void actionPerformed(ActionEvent e) {
 
+                            return false;
                         }
                     };
                     dispose();
@@ -107,11 +110,13 @@
                         @Override
                         public void actionPerformed(ActionEvent e) {
 
+                            return false;
                         }
                     };
                     dispose();
                 }
 
+                return false;
             }
         };
     }
Index: src/Zoo/SignUpWindow.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Zoo;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.*;\r\nimport java.io.*;\r\nimport java.util.Scanner;\r\n\r\npublic abstract class SignUpWindow extends JFrame implements ActionListener, MouseListener,FocusListener {\r\n    protected JFormattedTextField fName;\r\n    protected JFormattedTextField fEmail;\r\n    protected JPasswordField pPassword;\r\n    protected JPasswordField pReconfirmPass;\r\n    protected JButton bSubmit;\r\n    protected JPanel pnlSignUp;\r\n    private JLabel lblBack;\r\n    private JLabel lblSignUp;\r\n\r\n    public SignUpWindow(){\r\n        super.setTitle(\"Sign Up\"); // title\r\n        super.setSize(400,250);\r\n\r\n        pPassword.setEchoChar((char)0); // Make text visible initially\r\n        pPassword.setText(\"Password\");\r\n\r\n        pReconfirmPass.setEchoChar((char)0);\r\n        pReconfirmPass.setText(\"Reconfirm Password\");\r\n\r\n        //action listener\r\n        lblBack.addMouseListener(this);\r\n        bSubmit.addActionListener(this);\r\n        fName.addFocusListener(this);\r\n        fName.addActionListener(this);\r\n        fEmail.addFocusListener(this);\r\n        fEmail.addActionListener(this);\r\n        pPassword.addFocusListener(this);\r\n        pPassword.addActionListener(this);\r\n        pReconfirmPass.addFocusListener(this);\r\n        pReconfirmPass.addActionListener(this);\r\n\r\n        //add designed to Content Pane\r\n        Container cp = super.getContentPane();\r\n        cp.add(pnlSignUp);\r\n\r\n\r\n\r\n        ImageIcon image = new ImageIcon(\"Zoo.jfif\");\r\n        super.setIconImage(image.getImage());\r\n\r\n        super.setVisible(true);\r\n    }\r\n\r\n    public static void main(String[] args){\r\n        new SignUpWindow() {\r\n            @Override\r\n            public void focusGained(FocusEvent e) {\r\n                if (e.getSource() == fName && fName.getText().equals(\"Name\")) {\r\n                    fName.setText(\"\");\r\n                }\r\n                if (e.getSource() == fEmail && fEmail.getText().equals(\"Email\")) {\r\n                    fEmail.setText(\"\");\r\n                }\r\n\r\n                if (e.getSource() == pPassword) {\r\n                    if (String.valueOf(pPassword.getPassword()).equals(\"Password\") && pPassword.getEchoChar() == 0) {\r\n                        pPassword.setText(\"\");\r\n                        pPassword.setEchoChar('•');\r\n                    }\r\n                }\r\n\r\n                if (e.getSource() == pReconfirmPass) {\r\n                    if (String.valueOf(pReconfirmPass.getPassword()).equals(\"Reconfirm Password\") && pReconfirmPass.getEchoChar() == 0) {\r\n                        pReconfirmPass.setText(\"\");\r\n                        pReconfirmPass.setEchoChar('•');\r\n                    }\r\n                }\r\n\r\n\r\n            }\r\n\r\n            @Override\r\n            public void focusLost(FocusEvent e) {\r\n\r\n                if (e.getSource() == fName && fName.getText().equals(\"\")) {\r\n                    fName.setText(\"Name\");\r\n                }\r\n                if (e.getSource() == fEmail && fEmail.getText().equals(\"\")) {\r\n                    fEmail.setText(\"Email\");\r\n                }\r\n                if (e.getSource() == pPassword && String.valueOf(pPassword.getPassword()).isEmpty()) {\r\n                    pPassword.setText(\"Password\");\r\n                    pPassword.setEchoChar((char) 0);\r\n                }\r\n                if (e.getSource() == pPassword && String.valueOf(pPassword.getPassword()).isEmpty()) {\r\n                    pPassword.setText(\"Password\");\r\n                    pPassword.setEchoChar((char) 0);\r\n                }\r\n                if (e.getSource() == pReconfirmPass && String.valueOf(pReconfirmPass.getPassword()).isEmpty()) {\r\n                    pReconfirmPass.setText(\"Reconfirm Password\");\r\n                    pReconfirmPass.setEchoChar((char) 0);\r\n                }\r\n\r\n            }\r\n\r\n            @Override\r\n            public void mouseClicked(MouseEvent e) {\r\n            }\r\n\r\n            @Override\r\n            public void mousePressed(MouseEvent e) {\r\n            }\r\n\r\n            @Override\r\n            public void mouseReleased(MouseEvent e) {\r\n            }\r\n\r\n            @Override\r\n            public void mouseEntered(MouseEvent e) {\r\n            }\r\n\r\n            @Override\r\n            public void mouseExited(MouseEvent e) {\r\n            }\r\n\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                if (e.getSource() == bSubmit) {\r\n                    //get text from password field n reconfirm field\r\n                    String password = String.valueOf(pPassword.getPassword());\r\n                    String confirmpass = String.valueOf(pReconfirmPass.getPassword());\r\n\r\n\r\n                    if (fName.getText().equals(\"Name\")) {\r\n                        JOptionPane.showMessageDialog(this, \"Please enter your name\");\r\n                        return;\r\n                    } else if (fEmail.getText().equals(\"Email\")) {\r\n                        JOptionPane.showMessageDialog(this, \"Please enter your email\");\r\n                        return;\r\n                    } else if (!fEmail.getText().matches(\"^[A-Za-z0-9._%+-]+@gmail\\\\.com$\")) {\r\n                        JOptionPane.showMessageDialog(this, \"Please enter a valid Gmail address (e.g., name@gmail.com)\");\r\n                        return;\r\n                    } else if (password.equals(\"Password\")) {\r\n                        JOptionPane.showMessageDialog(this, \"Please enter your password\");\r\n                        return;\r\n                    } else if (confirmpass.equals(\"Reconfirm Password\")) {\r\n                        JOptionPane.showMessageDialog(this, \"Please enter your reconfirm password\");\r\n                        return;\r\n                    }\r\n\r\n                    // Check if both passwords match\r\n                    else if (!password.equals(confirmpass)) {\r\n                        JOptionPane.showMessageDialog(this, \"Passwords do not match. Please retype.\");\r\n                        return;\r\n                    }\r\n                    else if(isEmailAlreadyUsed(fEmail.getText())){\r\n                        JOptionPane.showMessageDialog(this, \"This email is already registered.\");\r\n                        return;\r\n                    }\r\n\r\n\r\n                    if (e.getSource() == bSubmit) {\r\n                        // All good\r\n                        JOptionPane.showMessageDialog(this, \"Sign-up successful!\");\r\n                        // Proceed to next screen or save data\r\n                        try {\r\n                            FileWriter fw = new FileWriter(\"password.txt\", true); // true = append\r\n                            BufferedWriter bw = new BufferedWriter(fw);\r\n                            bw.write(\"Email: \" + fEmail.getText());\r\n                            bw.newLine();\r\n                            bw.write(\"Password: \" + String.valueOf(pPassword.getPassword()));\r\n                            bw.newLine();\r\n                            bw.write(\"------------------------\");\r\n                            bw.newLine();\r\n                            bw.close();\r\n                        } catch (IOException ex) {\r\n                            JOptionPane.showMessageDialog(this, \"Error saving to file: \" + ex.getMessage());\r\n                        }\r\n                    }\r\n\r\n\r\n                }\r\n\r\n\r\n            }\r\n\r\n            private boolean isEmailAlreadyUsed(String email) {\r\n                try {\r\n                    File file = new File(\"password.txt\");\r\n                    if (!file.exists())\r\n                        return false;\r\n                    Scanner sc = new Scanner(file);\r\n                    while ((sc.hasNextLine())) {\r\n                        if (sc.nextLine().equals(\"Email: \" + email)) {\r\n                            sc.close();\r\n                            return true;\r\n                        }\r\n                    }\r\n                    sc.close();\r\n                } catch (FileNotFoundException ex) {\r\n                    JOptionPane.showMessageDialog(this, \"Error checking email: \" + ex.getMessage());\r\n                }\r\n                return false;\r\n            }\r\n\r\n\r\n            };\r\n\r\n\r\n        };\r\n    }\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Zoo/SignUpWindow.java b/src/Zoo/SignUpWindow.java
--- a/src/Zoo/SignUpWindow.java	(revision 92abc7475221d2877613daa782a93470e25ba658)
+++ b/src/Zoo/SignUpWindow.java	(date 1751723329821)
@@ -13,21 +13,20 @@
     protected JPasswordField pReconfirmPass;
     protected JButton bSubmit;
     protected JPanel pnlSignUp;
-    private JLabel lblBack;
     private JLabel lblSignUp;
 
-    public SignUpWindow(){
+    public SignUpWindow() {
         super.setTitle("Sign Up"); // title
-        super.setSize(400,250);
+        super.setSize(400, 250);
 
-        pPassword.setEchoChar((char)0); // Make text visible initially
+        pPassword.setEchoChar((char) 0); // Make text visible initially
         pPassword.setText("Password");
 
-        pReconfirmPass.setEchoChar((char)0);
+        pReconfirmPass.setEchoChar((char) 0);
         pReconfirmPass.setText("Reconfirm Password");
 
         //action listener
-        lblBack.addMouseListener(this);
+
         bSubmit.addActionListener(this);
         fName.addFocusListener(this);
         fName.addActionListener(this);
@@ -43,14 +42,13 @@
         cp.add(pnlSignUp);
 
 
-
         ImageIcon image = new ImageIcon("Zoo.jfif");
         super.setIconImage(image.getImage());
 
         super.setVisible(true);
     }
 
-    public static void main(String[] args){
+    public static void main(String[] args) {
         new SignUpWindow() {
             @Override
             public void focusGained(FocusEvent e) {
@@ -104,6 +102,7 @@
 
             @Override
             public void mouseClicked(MouseEvent e) {
+
             }
 
             @Override
@@ -132,80 +131,60 @@
 
                     if (fName.getText().equals("Name")) {
                         JOptionPane.showMessageDialog(this, "Please enter your name");
-                        return;
+                        return false;
                     } else if (fEmail.getText().equals("Email")) {
                         JOptionPane.showMessageDialog(this, "Please enter your email");
-                        return;
+                        return false;
                     } else if (!fEmail.getText().matches("^[A-Za-z0-9._%+-]+@gmail\\.com$")) {
                         JOptionPane.showMessageDialog(this, "Please enter a valid Gmail address (e.g., name@gmail.com)");
-                        return;
+                        return false;
                     } else if (password.equals("Password")) {
                         JOptionPane.showMessageDialog(this, "Please enter your password");
-                        return;
+                        return false;
                     } else if (confirmpass.equals("Reconfirm Password")) {
                         JOptionPane.showMessageDialog(this, "Please enter your reconfirm password");
-                        return;
+                        return false;
                     }
 
                     // Check if both passwords match
                     else if (!password.equals(confirmpass)) {
                         JOptionPane.showMessageDialog(this, "Passwords do not match. Please retype.");
-                        return;
-                    }
-                    else if(isEmailAlreadyUsed(fEmail.getText())){
-                        JOptionPane.showMessageDialog(this, "This email is already registered.");
-                        return;
+                        return false;
                     }
 
 
-                    if (e.getSource() == bSubmit) {
-                        // All good
-                        JOptionPane.showMessageDialog(this, "Sign-up successful!");
-                        // Proceed to next screen or save data
-                        try {
-                            FileWriter fw = new FileWriter("password.txt", true); // true = append
-                            BufferedWriter bw = new BufferedWriter(fw);
-                            bw.write("Email: " + fEmail.getText());
-                            bw.newLine();
-                            bw.write("Password: " + String.valueOf(pPassword.getPassword()));
-                            bw.newLine();
-                            bw.write("------------------------");
-                            bw.newLine();
-                            bw.close();
-                        } catch (IOException ex) {
-                            JOptionPane.showMessageDialog(this, "Error saving to file: " + ex.getMessage());
-                        }
+                    // Proceed to next screen or save data
+                    try {
+                        FileWriter fw = new FileWriter("password.txt", true); // true = append
+                        BufferedWriter bw = new BufferedWriter(fw);
+                        bw.write("Email: " + fEmail.getText());
+                        bw.newLine();
+                        bw.write("Password: " + String.valueOf(pPassword.getPassword()));
+                        bw.newLine();
+                        bw.write("------------------------");
+                        bw.newLine();
+                        bw.close();
+                    } catch (IOException ex) {
+                        JOptionPane.showMessageDialog(this, "Error saving to file: " + ex.getMessage());
                     }
-
 
-                }
 
+                    LogInWindow login = new LogInWindow() {
+                        @Override
+                        public void actionPerformed(ActionEvent e) {
 
-            }
-
-            private boolean isEmailAlreadyUsed(String email) {
-                try {
-                    File file = new File("password.txt");
-                    if (!file.exists())
-                        return false;
-                    Scanner sc = new Scanner(file);
-                    while ((sc.hasNextLine())) {
-                        if (sc.nextLine().equals("Email: " + email)) {
-                            sc.close();
-                            return true;
+                            return false;
                         }
-                    }
-                    sc.close();
-                } catch (FileNotFoundException ex) {
-                    JOptionPane.showMessageDialog(this, "Error checking email: " + ex.getMessage());
+                    };
+
                 }
+
+
                 return false;
             }
-
-
-            };
+        };
+    }
+}
 
 
-        };
-    }
 
Index: src/Price.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\n\r\npublic class Price extends JFrame implements ActionListener {\r\n    private JPanel pnlPrice;\r\n    private JButton btnContinueOrder;\r\n    private JList list1;\r\n    private JList list2;\r\n    private JLabel lblWeekday;\r\n    private JLabel lblWeekend;\r\n\r\n\r\n    public Price(){\r\n        super.setSize(500,250);\r\n        super.setDefaultCloseOperation(DISPOSE_ON_CLOSE);\r\n\r\n        //add action Listener\r\n        btnContinueOrder.addActionListener(this);\r\n\r\n        Container cp = super.getContentPane();\r\n        cp.add(pnlPrice);\r\n\r\n        super.setVisible(true);\r\n\r\n    }\r\n\r\n\r\n    public static void main(String[] args){\r\n        new Price();\r\n    }\r\n\r\n\r\n    @Override\r\n    public void actionPerformed(ActionEvent e) {\r\n        if(e.getSource()==btnContinueOrder){\r\n            Checkout cp = new Checkout();\r\n            dispose();\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Price.java b/src/Price.java
--- a/src/Price.java	(revision 92abc7475221d2877613daa782a93470e25ba658)
+++ b/src/Price.java	(date 1751723271158)
@@ -38,5 +38,6 @@
             Checkout cp = new Checkout();
             dispose();
         }
+        return false;
     }
 }
