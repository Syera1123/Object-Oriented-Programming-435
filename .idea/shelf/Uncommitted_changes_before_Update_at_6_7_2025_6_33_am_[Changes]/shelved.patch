Index: src/Zoo/LogInWindow.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Zoo;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.*;\r\nimport java.io.*;\r\n\r\npublic abstract class LogInWindow extends JFrame implements ActionListener {\r\n    protected JPanel panel1;\r\n    protected JFormattedTextField fEmail;\r\n    protected JPasswordField jPassword;\r\n    protected JCheckBox jcbRememberMe;\r\n    protected JButton btnSubmit;\r\n    protected JLabel lblLogIn;\r\n    protected JLabel lblPassword;\r\n    protected JLabel lblForgotPass;\r\n\r\n    public LogInWindow() {\r\n        super.setTitle(\"Zoo Booking\");\r\n        super.setSize(400, 300);\r\n\r\n        // Listener\r\n        btnSubmit.addActionListener(this);\r\n        fEmail.addActionListener(this);\r\n        jPassword.addActionListener(this);\r\n\r\n        // Add GUI panel\r\n        Container cp = super.getContentPane();\r\n        cp.add(panel1);\r\n\r\n        super.setVisible(true);\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        LogInWindow log = new LogInWindow()\r\n        {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                String email = fEmail.getText();\r\n                String password = String.valueOf(jPassword.getPassword());\r\n\r\n                if (email.isEmpty()) {\r\n                    JOptionPane.showMessageDialog(this, \"Please enter your email\");\r\n                    return;\r\n                }\r\n\r\n                if (password.isEmpty()) {\r\n                    JOptionPane.showMessageDialog(this, \"Please enter your password\");\r\n                    return;\r\n                }\r\n\r\n                // ✅ Check email-password match\r\n                if (isLoginValid(email, password)) {\r\n                    new Price();\r\n                    dispose();\r\n                } else {\r\n                    JOptionPane.showMessageDialog(this, \"Invalid email or password\");\r\n                }\r\n            }\r\n\r\n            private boolean isLoginValid(String email, String password) {\r\n                try {\r\n                    File file = new File(\"password.txt\");\r\n                    if (!file.exists())\r\n                        return false;\r\n\r\n                    BufferedReader reader = new BufferedReader(new FileReader(file));\r\n                    String line;\r\n                    boolean emailFound = false;\r\n\r\n                    while ((line = reader.readLine()) != null) {\r\n                        if (line.equals(\"Email: \" + email)) {\r\n                            emailFound = true;\r\n                            String nextLine = reader.readLine(); // should be password\r\n                            if (nextLine != null && nextLine.equals(\"Password: \" + password)) {\r\n                                reader.close();\r\n                                return true; // Match found\r\n                            } else {\r\n                                reader.close();\r\n                                return false; // Password mismatch\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    reader.close();\r\n                } catch (IOException ex) {\r\n                    JOptionPane.showMessageDialog(this, \"Error reading file: \" + ex.getMessage());\r\n                }\r\n                return false;\r\n            }\r\n        };\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Zoo/LogInWindow.java b/src/Zoo/LogInWindow.java
--- a/src/Zoo/LogInWindow.java	(revision e8487a9ac7f8a5575b71314290caebcd96701224)
+++ b/src/Zoo/LogInWindow.java	(date 1751754764213)
@@ -5,8 +5,13 @@
 import java.awt.event.*;
 import java.io.*;
 
+<<<<<<< HEAD
 public abstract class LogInWindow extends JFrame implements ActionListener {
+    protected JPanel panel1;               // from IntelliJ GUI Designer
+=======
+public abstract class LogInWindow extends JFrame implements ActionListener,MouseListener{
     protected JPanel panel1;
+>>>>>>> b1a0db0eae7e6173c4bff11504d70433ddb886c9
     protected JFormattedTextField fEmail;
     protected JPasswordField jPassword;
     protected JCheckBox jcbRememberMe;
@@ -15,25 +20,90 @@
     protected JLabel lblPassword;
     protected JLabel lblForgotPass;
 
+    private JPanel fullpanel;
+
     public LogInWindow() {
         super.setTitle("Zoo Booking");
-        super.setSize(400, 300);
+        super.setSize(700, 500);
+<<<<<<< HEAD
+        setLocationRelativeTo(null);
+        setDefaultCloseOperation(EXIT_ON_CLOSE);
+=======
+>>>>>>> b1a0db0eae7e6173c4bff11504d70433ddb886c9
 
-        // Listener
+        // === Listener setup ===
         btnSubmit.addActionListener(this);
         fEmail.addActionListener(this);
         jPassword.addActionListener(this);
 
+<<<<<<< HEAD
+        // === Background Image ===
+        JLabel backgroundLabel = new JLabel();
+        ImageIcon bgIcon = new ImageIcon(getClass().getResource("/Untitled design.png")); // Make sure path is correct
+        backgroundLabel.setIcon(new ImageIcon(bgIcon.getImage().getScaledInstance(700, 500, Image.SCALE_SMOOTH)));
+        backgroundLabel.setBounds(0, 0, 700, 500);
+=======
+
         // Add GUI panel
         Container cp = super.getContentPane();
         cp.add(panel1);
+>>>>>>> b1a0db0eae7e6173c4bff11504d70433ddb886c9
+
+        fullpanel = new JPanel(null) {
+            private final Image bgImage = new ImageIcon(getClass().getResource("/Untitled design.png")).getImage();
 
-        super.setVisible(true);
+            @Override
+            protected void paintComponent(Graphics g) {
+                super.paintComponent(g);
+                g.drawImage(bgImage, 0, 0, getWidth(), getHeight(), this);
+            }
+        };
+        fullpanel.setOpaque(false);
+        fullpanel.setBounds(0, 0, 700, 500);
+
+        panel1.setOpaque(false);
+        panel1.setBounds(80, 40, 540, 420);
+        fullpanel.add(panel1);
+
+// Layered Pane
+        JLayeredPane layeredPane = new JLayeredPane();
+        layeredPane.setPreferredSize(new Dimension(700, 500));
+
+        layeredPane.add(fullpanel, Integer.valueOf(0)); // now fullpanel has background + form
+        setContentPane(layeredPane);
+
+        setContentPane(layeredPane);
+        pack();
+        setVisible(true);
     }
 
     public static void main(String[] args) {
-        LogInWindow log = new LogInWindow()
-        {
+        LogInWindow log = new LogInWindow() {
+            @Override
+            public void mouseClicked(MouseEvent e) {
+
+            }
+
+            @Override
+            public void mousePressed(MouseEvent e) {
+
+            }
+
+            @Override
+            public void mouseReleased(MouseEvent e) {
+
+            }
+
+            @Override
+            public void mouseEntered(MouseEvent e) {
+
+            }
+
+            @Override
+            public void mouseExited(MouseEvent e) {
+
+            }
+
             @Override
             public void actionPerformed(ActionEvent e) {
                 String email = fEmail.getText();
@@ -49,40 +119,25 @@
                     return;
                 }
 
-                // ✅ Check email-password match
                 if (isLoginValid(email, password)) {
-                    new Price();
+                    new Price(); // Move to Price window
                     dispose();
                 } else {
                     JOptionPane.showMessageDialog(this, "Invalid email or password");
                 }
+
             }
+
 
             private boolean isLoginValid(String email, String password) {
-                try {
-                    File file = new File("password.txt");
-                    if (!file.exists())
-                        return false;
-
-                    BufferedReader reader = new BufferedReader(new FileReader(file));
+                try (BufferedReader reader = new BufferedReader(new FileReader("password.txt"))) {
                     String line;
-                    boolean emailFound = false;
-
                     while ((line = reader.readLine()) != null) {
                         if (line.equals("Email: " + email)) {
-                            emailFound = true;
-                            String nextLine = reader.readLine(); // should be password
-                            if (nextLine != null && nextLine.equals("Password: " + password)) {
-                                reader.close();
-                                return true; // Match found
-                            } else {
-                                reader.close();
-                                return false; // Password mismatch
-                            }
+                            String nextLine = reader.readLine(); // Password line
+                            return nextLine != null && nextLine.equals("Password: " + password);
                         }
                     }
-
-                    reader.close();
                 } catch (IOException ex) {
                     JOptionPane.showMessageDialog(this, "Error reading file: " + ex.getMessage());
                 }
@@ -90,4 +145,4 @@
             }
         };
     }
-}
\ No newline at end of file
+}
