Index: src/Zoo/SignUpWindow.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Zoo;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.*;\r\nimport java.io.*;\r\nimport java.util.Scanner;\r\n\r\npublic abstract class SignUpWindow extends JFrame implements ActionListener, MouseListener,FocusListener {\r\n    protected JFormattedTextField fName;\r\n    protected JFormattedTextField fEmail;\r\n    protected JPasswordField pPassword;\r\n    protected JPasswordField pReconfirmPass;\r\n    protected JButton bSubmit;\r\n    protected JPanel pnlSignUp;\r\n    private JLabel lblBack;\r\n    private JLabel lblSignUp;\r\n\r\n    public SignUpWindow(){\r\n        super.setTitle(\"Sign Up\"); // title\r\n        super.setSize(400,250);\r\n\r\n        pPassword.setEchoChar((char)0); // Make text visible initially\r\n        pPassword.setText(\"Password\");\r\n\r\n        pReconfirmPass.setEchoChar((char)0);\r\n        pReconfirmPass.setText(\"Reconfirm Password\");\r\n\r\n        //action listener\r\n        lblBack.addMouseListener(this);\r\n        bSubmit.addActionListener(this);\r\n        fName.addFocusListener(this);\r\n        fName.addActionListener(this);\r\n        fEmail.addFocusListener(this);\r\n        fEmail.addActionListener(this);\r\n        pPassword.addFocusListener(this);\r\n        pPassword.addActionListener(this);\r\n        pReconfirmPass.addFocusListener(this);\r\n        pReconfirmPass.addActionListener(this);\r\n\r\n        //add designed to Content Pane\r\n        Container cp = super.getContentPane();\r\n        cp.add(pnlSignUp);\r\n\r\n\r\n\r\n        ImageIcon image = new ImageIcon(\"Zoo.jfif\");\r\n        super.setIconImage(image.getImage());\r\n\r\n        super.setVisible(true);\r\n    }\r\n\r\n    public static void main(String[] args){\r\n        new SignUpWindow() {\r\n            @Override\r\n            public void focusGained(FocusEvent e) {\r\n                if (e.getSource() == fName && fName.getText().equals(\"Name\")) {\r\n                    fName.setText(\"\");\r\n                }\r\n                if (e.getSource() == fEmail && fEmail.getText().equals(\"Email\")) {\r\n                    fEmail.setText(\"\");\r\n                }\r\n\r\n                if (e.getSource() == pPassword) {\r\n                    if (String.valueOf(pPassword.getPassword()).equals(\"Password\") && pPassword.getEchoChar() == 0) {\r\n                        pPassword.setText(\"\");\r\n                        pPassword.setEchoChar('•');\r\n                    }\r\n                }\r\n\r\n                if (e.getSource() == pReconfirmPass) {\r\n                    if (String.valueOf(pReconfirmPass.getPassword()).equals(\"Reconfirm Password\") && pReconfirmPass.getEchoChar() == 0) {\r\n                        pReconfirmPass.setText(\"\");\r\n                        pReconfirmPass.setEchoChar('•');\r\n                    }\r\n                }\r\n\r\n\r\n            }\r\n\r\n            @Override\r\n            public void focusLost(FocusEvent e) {\r\n\r\n                if (e.getSource() == fName && fName.getText().equals(\"\")) {\r\n                    fName.setText(\"Name\");\r\n                }\r\n                if (e.getSource() == fEmail && fEmail.getText().equals(\"\")) {\r\n                    fEmail.setText(\"Email\");\r\n                }\r\n                if (e.getSource() == pPassword && String.valueOf(pPassword.getPassword()).isEmpty()) {\r\n                    pPassword.setText(\"Password\");\r\n                    pPassword.setEchoChar((char) 0);\r\n                }\r\n                if (e.getSource() == pPassword && String.valueOf(pPassword.getPassword()).isEmpty()) {\r\n                    pPassword.setText(\"Password\");\r\n                    pPassword.setEchoChar((char) 0);\r\n                }\r\n                if (e.getSource() == pReconfirmPass && String.valueOf(pReconfirmPass.getPassword()).isEmpty()) {\r\n                    pReconfirmPass.setText(\"Reconfirm Password\");\r\n                    pReconfirmPass.setEchoChar((char) 0);\r\n                }\r\n\r\n            }\r\n\r\n            @Override\r\n            public void mouseClicked(MouseEvent e) {\r\n            }\r\n\r\n            @Override\r\n            public void mousePressed(MouseEvent e) {\r\n            }\r\n\r\n            @Override\r\n            public void mouseReleased(MouseEvent e) {\r\n            }\r\n\r\n            @Override\r\n            public void mouseEntered(MouseEvent e) {\r\n            }\r\n\r\n            @Override\r\n            public void mouseExited(MouseEvent e) {\r\n            }\r\n\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                if (e.getSource() == bSubmit) {\r\n                    //get text from password field n reconfirm field\r\n                    String password = String.valueOf(pPassword.getPassword());\r\n                    String confirmpass = String.valueOf(pReconfirmPass.getPassword());\r\n\r\n\r\n                    if (fName.getText().equals(\"Name\")) {\r\n                        JOptionPane.showMessageDialog(this, \"Please enter your name\");\r\n                        return;\r\n                    } else if (fEmail.getText().equals(\"Email\")) {\r\n                        JOptionPane.showMessageDialog(this, \"Please enter your email\");\r\n                        return;\r\n                    } else if (!fEmail.getText().matches(\"^[A-Za-z0-9._%+-]+@gmail\\\\.com$\")) {\r\n                        JOptionPane.showMessageDialog(this, \"Please enter a valid Gmail address (e.g., name@gmail.com)\");\r\n                        return;\r\n                    } else if (password.equals(\"Password\")) {\r\n                        JOptionPane.showMessageDialog(this, \"Please enter your password\");\r\n                        return;\r\n                    } else if (confirmpass.equals(\"Reconfirm Password\")) {\r\n                        JOptionPane.showMessageDialog(this, \"Please enter your reconfirm password\");\r\n                        return;\r\n                    }\r\n\r\n                    // Check if both passwords match\r\n                    else if (!password.equals(confirmpass)) {\r\n                        JOptionPane.showMessageDialog(this, \"Passwords do not match. Please retype.\");\r\n                        return;\r\n                    }\r\n                    else if(isEmailAlreadyUsed(fEmail.getText())){\r\n                        JOptionPane.showMessageDialog(this, \"This email is already registered.\");\r\n                        return;\r\n                    }\r\n\r\n\r\n                    if (e.getSource() == bSubmit) {\r\n                        // All good\r\n                        JOptionPane.showMessageDialog(this, \"Sign-up successful!\");\r\n                        // Proceed to next screen or save data\r\n                        try {\r\n                            FileWriter fw = new FileWriter(\"password.txt\", true); // true = append\r\n                            BufferedWriter bw = new BufferedWriter(fw);\r\n                            bw.write(\"Email: \" + fEmail.getText());\r\n                            bw.newLine();\r\n                            bw.write(\"Password: \" + String.valueOf(pPassword.getPassword()));\r\n                            bw.newLine();\r\n                            bw.write(\"------------------------\");\r\n                            bw.newLine();\r\n                            bw.close();\r\n                        } catch (IOException ex) {\r\n                            JOptionPane.showMessageDialog(this, \"Error saving to file: \" + ex.getMessage());\r\n                        }\r\n                    }\r\n\r\n\r\n                }\r\n\r\n\r\n            }\r\n\r\n            private boolean isEmailAlreadyUsed(String email) {\r\n                try {\r\n                    File file = new File(\"password.txt\");\r\n                    if (!file.exists())\r\n                        return false;\r\n                    Scanner sc = new Scanner(file);\r\n                    while ((sc.hasNextLine())) {\r\n                        if (sc.nextLine().equals(\"Email: \" + email)) {\r\n                            sc.close();\r\n                            return true;\r\n                        }\r\n                    }\r\n                    sc.close();\r\n                } catch (FileNotFoundException ex) {\r\n                    JOptionPane.showMessageDialog(this, \"Error checking email: \" + ex.getMessage());\r\n                }\r\n                return false;\r\n            }\r\n\r\n\r\n            };\r\n\r\n\r\n        };\r\n    }\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Zoo/SignUpWindow.java b/src/Zoo/SignUpWindow.java
--- a/src/Zoo/SignUpWindow.java	(revision 92abc7475221d2877613daa782a93470e25ba658)
+++ b/src/Zoo/SignUpWindow.java	(date 1751715505386)
@@ -13,8 +13,8 @@
     protected JPasswordField pReconfirmPass;
     protected JButton bSubmit;
     protected JPanel pnlSignUp;
-    private JLabel lblBack;
-    private JLabel lblSignUp;
+    protected JLabel lblBack;
+    protected JLabel lblSignUp;
 
     public SignUpWindow(){
         super.setTitle("Sign Up"); // title
@@ -42,8 +42,6 @@
         Container cp = super.getContentPane();
         cp.add(pnlSignUp);
 
-
-
         ImageIcon image = new ImageIcon("Zoo.jfif");
         super.setIconImage(image.getImage());
 
@@ -104,27 +102,59 @@
 
             @Override
             public void mouseClicked(MouseEvent e) {
-            }
+                if(e.getSource()==lblBack){
+                    dispose();
+                    new WelcomePage() {
+                        @Override
+                        public void mouseClicked(MouseEvent e) {
+
+
+                        }
 
-            @Override
-            public void mousePressed(MouseEvent e) {
-            }
+                        @Override
+                        public void mousePressed(MouseEvent e) {
+
+                        }
 
-            @Override
-            public void mouseReleased(MouseEvent e) {
-            }
+                        @Override
+                        public void mouseReleased(MouseEvent e) {
+
+                        }
 
-            @Override
-            public void mouseEntered(MouseEvent e) {
-            }
+                        @Override
+                        public void mouseEntered(MouseEvent e) {
+
+                        }
 
-            @Override
-            public void mouseExited(MouseEvent e) {
+                        @Override
+                        public void mouseExited(MouseEvent e) {
+
+                        }
+
+                        @Override
+                        public void actionPerformed(ActionEvent e) {
+
+                        }
+                    };
+                }
             }
+
+            @Override
+            public void mousePressed(MouseEvent e) {}
+
+            @Override
+            public void mouseReleased(MouseEvent e) {}
+
+            @Override
+            public void mouseEntered(MouseEvent e) {}
+
+            @Override
+            public void mouseExited(MouseEvent e) {}
 
             @Override
             public void actionPerformed(ActionEvent e) {
                 if (e.getSource() == bSubmit) {
+                    
                     //get text from password field n reconfirm field
                     String password = String.valueOf(pPassword.getPassword());
                     String confirmpass = String.valueOf(pReconfirmPass.getPassword());
